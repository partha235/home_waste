# this program is to test HC-SR04 and servo
from machine import Pin, time_pulse_us,PWM
import time

# Define pins (use appropriate GPIOs)
trigger = Pin(13, Pin.OUT)  # Trigger pin
echo = Pin(12, Pin.IN)     # Echo pin

# Connect servo signal wire to GPIO 14 (or any PWM-capable pin)
servo = PWM(Pin(5), freq=50)  # 50 Hz for servo control


def set_angle(angle):
    # Convert angle (0–180°) to duty cycle (approx. 0.5ms–2.5ms pulse width)
    min_duty = 26   # ~0.5ms
    max_duty = 128  # ~2.5ms
    duty = int(min_duty + (angle / 180) * (max_duty - min_duty))
    servo.duty(duty)


def get_distance():
    # Send a 10us pulse to trigger
    trigger.off()
    time.sleep_us(2)
    trigger.on()
    time.sleep_us(10)
    trigger.off()

    # Measure echo pulse duration in microseconds
    duration = time_pulse_us(echo, 1, 30000)  # Timeout = 30ms

    # Calculate distance in cm (sound speed = 34300 cm/s)
    distance_cm = (duration / 2) / 29.1
    return distance_cm

# Main loop
while True:
    dist = get_distance()
    x=int(dist)
    print("Distance: {:.2f} cm".format(dist))
    if(dist<=10):
        print("human detected")
        set_angle(160)  # 160 works fine 
        time.sleep(2)
    else:
        # setting servo to close bin 
        print("Moving to 90°")
        set_angle(90)
        time.sleep_ms(100)
    
    time.sleep_ms(100)
